allowDomain
allowInsecureDomain
ExternalInterface
fscommand
getURL
htmlText
loadBytes
loadPolicyFile
LocalConnection
navigateToURL 
ANDROID_ID
bindService
checkPermission
commit
Cursor
debuggable
deleteFile
execSQL
fileList
FileOutputStream
getCacheDir
getContentResolver
getDir
getExternalCacheDir
getExternalFilesDir
getExternalStorageState
getFilesDir
getFileStreamPath
getPreferences
getReadableDatabase
getSharedPreferences
getWritableDatabase
insert
LocationListener
LocationManager
LocationProvider
managedQuery
MODE_APPEND
MODE_PRIVATE
MODE_WORLD_READABLE
MODE_WORLD_WRITEABLE
onCreate
openFileInput
openFileOutput
query
registerReceiver
sendBroadcast
sendOrderedBroadcast
sendStickyBroadcast
SharedPreferences
SharedPreferences.Editor
SQLiteDatabase
startActivity
startService
stopService
WRITE_EXTERNAL_STORAGE
sdcard
getExternalStorageDirectory
isExternalStorageWritable
Request.QueryString
Request.Cookies
Request.Certificate
Request.ServerVariables
Request.IsSecureConnection
Request.Form
Replace
Request.Write
Response.Write
Response.Write\s*\(Request.QueryString\s*\(
FileSystemObject
Scripting.FileSystemObject
System.FileSystemInfo
My.Computer.Registry
System.IO
StreamReader
FileInputStream
GetTempFileName
System.Security.AccessControl 
Microsoft.Win32.RegistryKey 
AddFileSecurity
AddDirectorySecurity
DiscretionaryAcl
SetAccessControl
SqlError
SqlException
Server.Execute
Server.Transfer
Eval
Execute
Executeglobal
Wscript.Shell
Response.Write
Response.AddHeader
Response.Redirect
Scripting.FileSystemObject.OpenTextFile
Scripting.FileSystemObject.DeleteFile
GetObject
LoadPicture
Scripting.FileSystemObject.Write
Scripting.FileSystemObject.WriteLine
Scripting.FileSystemObject.GetFolder
Scripting.FileSystemObject.OpenTextFile
Scripting.FileSystemObject.Folder.Add
Scripting.FileSystemObject.DeleteFolder
Server.Createobject
CreateObject
Scripting.FileSystemObject.BuildPath
CDONTS
ADODB.Connection
ADODB.recordset 
ADODB.Command
ADODB.Recordset
printf[[:space:]]*\([^\,\'\"]+\)\;
snprintf[[:space:]]*\([^\,]+\,[[:space:]]*sizeof\(.*\%s
scanf[[:space:]]*\([^\,]+\%s[^\\,]+\,[^\,]+\)\;
strncpy[[:space:]]*\([^\,]+\,[[:space:]]*sizeof\(
memcpy[[:space:]]*\([^\,]+\,[^\,]+\,[[:space:]]*sizeof\(
[[:space:]]gets[[:space:]]*\(
exec(ve|l|lp|le|v)[[:space:]]*\(
system[[:space:]]*\(.*\)\;
(strc(at|py)|memcpy|sprintf|sscanf)[[:space:]]*\(.*argv
\[[0-9][0-9]+\].*=.*\\0
\[[^\]]+\+[^\]]*\].*=.*\\0
snprintf[[:space:]]*\([^\,]+\,[[:space:]]*sizeof\(.*\%s
strncpy[[:space:]]*\([^\,]+\,[[:space:]]*sizeof\(
memcpy[[:space:]]*\([^\,]+\,[^\,]+\,[[:space:]]*sizeof\(
memset[[:space:]]*\([^,]+,[^,]+,[[:space:]]*0[[:space:]]*\);
# Race conditions
access\s*\(
creat
mknod
mkfifo
pathconf
opendir
dirname
basename
scandir
fopen
lstat
stat\s*\(
open\s*\(
chmod
chown
chgrp
rename
(mkdir|mkdirp)
(rmdirp|rmdir)
remove
unlink
link\s*\(
lchown
(execve|execl|execlp|execle|execv)
freopen
mktemp
# RNG based signatures
drand48
erand48
initstate
(jrand48|lcong48|lrand48|mrand48|nrand48|seed48|srand48)
random
setstate
srand
strfry
memfrob
crypt
srandom
# Design signatures
chroot\s*\(
gets
system\s*\(
popen
getenv
strcpy
strcat
(printf|sprintf|wsprintf|wsprintfA|wsprintfW|_snprinft|_snwprinft)\s*\(
(lstrcpy|lstrcpyA|lstrcpyW)
wcscpy
_mbscpy
_tcscpy
(StrCpy|StrCpyA|StrCpyW)
lstrcat
wscat
_mbscat
_tcscat
(StrCat|StrCatA|StrCatW)
strxfrm
wcsxfrm
_tcsxfrm
lstrcpyn
lstrcpynW
(StrCpyN|StrCpyNA|StrCpyNW)
wcsncpy
_mbsncpy
_tcsncpy
wcsncat
_mbsncat
_tcsncat
MultiByteToWideChar
WideCharToMultiByte
StrNCat
(StrCatBuff|StrCatBuffA|StrCatBuffW)
(StrCatN|StrCatNA|StrCatNW)
(StrFormatByteSize|StrFormatByteSizeA|StrFormatByteSizeW)
(StrFormatByteSize64|StrFormatByteSize64A|StrFormatByteSize64W)
(StrFormatKBSize|StrFormatKBSizeA|StrFormatKBSizeW)
StrFromTimeInterval
StrFromTimeIntervalA
StrFromTimeIntervalW
wvnsprintf
wvnsprintfA
wvnsprintfW
wnsprintf
wnsprintfA
wnsprintfW
PathAddExtension
PathAddExtensionA
PathAddExtensionW
PathAddBackslash
PathAddBackslashA
PathAddBackslashW
PathAppend
PathAppendA
PathAppendW
PathCanonicalize
PathCanonicalizeA
PathCanonicalizeW
PathCombine
PathCombineA
PathCombineW
LoadLibrary
LoadLibraryA
LoadLibraryW
GetExtensionVersion
OemToChar
OemToCharA
OemToCharW
OemToCharBuff
OemToCharBuffA
OemToCharBuffW
OemToAnsi
OemToAnsiA
OemToAnsiW
OemToAnsiBuff
OemToAnsiBuffA
OemToAnsiBuffW
GetTempPath
GetTempPathA
GetTempPathW
GetTempFileName
GetTempFileNameA
GetTempFileNameW
ShellExecute
ShellExecuteA
ShellExecuteW
ShellExecuteEx
ShellExecuteExA
ShellExecuteExW
_wsystem
_execl
_texecl
_wexecl
_execle
_texecle
_wexecle
_execlp
_texeclp
_wexeclp
_execlpe
_texeclpe
_wexeclpe
_execv
_texecv
_wexecv
_execve
_texecve
_wexecve
_execvp
_texecvp
_wexecvp
_execvpe
_texecvpe
_wexecvpe
_spawnl
_tspawnl
_wspawnl
_spawnle
_tspawnle
_wspawnle
_spawnlp
_tspawnlp
_wspawnlp
_spawnlpe
_tspawnlpe
_wspawnlpe
_spawnv
_tspawnv
_wspawnv
_spawnve
_tspawnve
_wspawnve
_spawnvp
_tspawnvp
_wspawnvp
_spawnvpe
_tspawnvpe
_wspawnvpe
scanf
sscanf
fscanf
vfscanf
vsprintf
vscanf
vsscanf
streadd
strecpy
strtrns
realpath
syslog
getopt
getopt_long
getpass
getchar
fgetc
getc
read\s*\(
bcopy
fgets
cin
memcpy
fprintf
snprintf
strccpy
strcadd
strncpy
_vsnprintf
# tmp file
tmpfile
tmpnam
tempnam
# Usr
getlogin
cuserid
ttyname
# known input sources
fread
recv
readv
recvfrom
recvmsg
readdir
readlink
signal
# From book/ shostack
gethostbyname
gethostbyaddr
realloc
# From peter guttmans thesis
fork
vfork
# Additional win32 dangerous functions
_mbsnbcpy
CopyMemory
strlen
_tcslen
_mbslen
wcslen
CreateProcess
CreateProcessAsUser
CreateProcessWithLogon
WinExec
RpcImpersonateClient
ImpersonateLoggedOnUser
CoImpersonateClient
ImpersonateNamedPipeClient
ImpersonateDdeClientWindow
ImpersonateSecurityContext
QuerySecurityContextToken
SetThreadToken
SetSecurityDescriptorDacl
AfxLoadLibrary
LoadLibraryEx
InitializeCriticalSection
EnterCriticalSection
_tprintf
wprintf
_cprintf
swprintf
_stprintf
_ftprintf
fwprintf
swscanf
_stscanf
_cscanf
_ftscanf
fwscanf
_tscanf
wscanf
vprintf
vwprintf
vfprintf
vfwprintf
vswprintf
_vsnwprintf
# Functions from David Wheelers book
catgets
gettext
strncat
getwd
umask
AddAccessAllowedAce
# sw bugs from aaron campbell, see https://www.arbornetworks.com/blog/asert/static-code-analysis-using-google-code-search/
flags\s*&&\s*[A-Z_]+
\[sizeof\(.*\)\]\s*=\s*'?\\?0'?;$
^[\s\t]*printf\(getenv
if \(errno = E
<= 65553
0xfffffff[^0-9a-f]
getopt\s*\(argc,\s*argv,\s*\"[^\"]*;# file IO
open[[:space:]]input[[:space:]]
open[[:space:]]output[[:space:]]
read[[:space:]]
write[[:space:]]
delete[[:space:]]
# subroutines
call[[:space:]]
# debugging
with[[:space:]]debugging[[:space:]]mode
# dangerous
accept[[:space:]]
asm[[:space:]]+
unsafeAddr([[:space:]]+|[[:space:]]*\()
addr[[:space:]]*\(
# Execution
exec[[:space:]]*\(.*\$.*\)
passthru[[:space:]]*\(.*\)
popen[[:space:]]*\(.*\$.*\)
shell_exec[[:space:]]*\(.*\$.*\)
system[[:space:]]*\(.*\$.*\)
`[^`]*\$[^`]*`
#Otherstuffs
#XSS signature needs to stop matching before LF when color=on #bug(1)
echo.*\$_.*\[.*\]
eval[[:space:]]*\(.*\$.*\)
#SQLi signature needs to stop matching before LF when color=on #bug(1)
mysql_query[[:space:]]*\(.*\$.*\)
WHERE\s+.*=.*\$[^; ]+
(include|include_once|require|require_once)[[:space:]]*\(.*\$.*\)
print.*param[[:space:]]*\(.*\);
# Dotnet cookies
# Cookie manipulation can be key to various application security exploits, such as session hijacking/fixation and parameter
# manipulation.
System.Net.Cookie
HTTPOnly
document.cookie
# Dotnet crypto
RNGCryptoServiceProvider
SHA
MD5
base64
xor
(\.DES|TripleDES| DES)
RC2
System.Random
Random
System.Security.Cryptography
PBEParameterSpec
PasswordDeriveBytes
# Dotnet errors
catch\s*{
Finally
trace enabled
customErrors mode
System\.Diagnostics\.Process\.Start\(.*
new[[:space:]]+(System\.Diagnostic\.)?Process(StartInfo)?[[:space:]]*\(.*
\.Start[[:space:]]\(.*
# via CliWrap
new[[:space:]]+Cli[[:space:]]*\(.*
# via Microsoft.VisualBasic
\.Shell[[:space:]]*\(.*
<%=[[:space:]]*[Rr]equest\.[Qq]uery[Ss]tring\[.*%>
#[Ss][Ee][Ll][Ee][Cc][Tt][[:space:]]+.*\{[0-9]+\}
[Ss][Ee][Ll][Ee][Cc][Tt][[:space:]]+.*[\'\"][[:space:]]*\+[[:space:]]*[Rr]equest\..*
(WHERE|where)[[:space:]]+.*=.*[\'\"][[:space:]]*\+[[:space:]]*[Rr]equest\..*
[\'\" ]+AND[[:space:]]+.*=.*\+[[:space:]]*[Rr]equest\..*
(LIKE|like)[[:space:]]+[^\;]+\+[[:space:]]*[Rr]equest\..*
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*\+[[:space:]]*[Rr]equest
(LIMIT|limit)[[:space:]]+.*\+[[:space:]]*[Rr]equest\..*
# DotNet input controls
system.web.ui.htmlcontrols.htmlinputhidden
system.web.ui.webcontrols.hiddenfield
system.web.ui.webcontrols.hyperlink
system.web.ui.webcontrols.textbox
system.web.ui.webcontrols.label
system.web.ui.webcontrols.linkbutton
system.web.ui.webcontrols.listbox
system.web.ui.webcontrols.checkboxlist
system.web.ui.webcontrols.dropdownlist# Dotnet legacy
printf
strcpy
# Dotnet Logging
# Logging can be a source of information leakage.
log4net
Console.WriteLine
System.Diagnostics.Debug
System.Diagnostics.Trace
# Dotnet memory allocation and deallocation
# MemoryStream Class: https://msdn.microsoft.com/en-us/library/system.io.memorystream(v=vs.110).aspx
MemoryStream
.Write
.Read
.WriteByte
.WriteTo
.WriteAsync
.Flush
.Finalize
.CopyTo
# Dotnet permission
# Bypassing the code access security permission?
.RequestMinimum
.RequestOptional
Assert
Debug.Assert
CodeAccessPermission
ReflectionPermission.MemberAccess
SecurityPermission.ControlAppDomain
SecurityPermission.UnmanagedCode
SecurityPermission.SkipVerification
SecurityPermission.ControlEvidence
SecurityPermission.SerializationFormatter
SecurityPermission.ControlPrincipal
SecurityPermission.ControlDomainPolicy
SecurityPermission.ControlPolicy
# Dotnet reflection
# Reflection (C sharp): https://msdn.microsoft.com/en-us/library/mt656691.aspx
Reflection
# Dotnet HTTP request strings
# Requests from external sources. Ensure that all HTTP requests received are data validated for 
# composition, max and min length, and if the data falls with the realms of the
parameter white-list.
request.accepttypes
request.browser
request.files
request.headers
request.httpmethod
request.item
request.querystring
request.form
request.cookies
request.certificate
request.rawurl
request.servervariables
request.url
request.urlreferrer
request.useragent
request.userlanguages
request.IsSecureConnection
request.TotalBytes
request.BinaryRead
InputStream
HiddenField.Value
TextBox.Text
recordSet
# Dotnet serialization and deserialization
# Security and Serialization: https://msdn.microsoft.com/en-us/library/ek7af9ck(v=vs.90).aspx
Serialization
SerializationFormatter
Serializable
SerializeObject
SerializationBinder
JsonSerializer
JsonSerializerSettings
DleserializeObject
ISerializable
# DotNet SQL
exec[[:space:]]*sp_executesql
execute[[:space:]]*sp_executesql
exec[[:space:]]*sp_.*
execute[[:space:]]*sp_.*
exec[[:space:]]*xp_.*
execute[[:space:]]*sp_.*
exec[[:space:]]*@
execute[[:space:]]*@
executestatement[[:space:]]*\(
executeSQL[[:space:]]*\(
#setfilter
executeQuery[[:space:]]*\(
GetQueryResultInXML[[:space:]]*\(
#adodb
#sqloledb
#sql[[:space:]]*server
#driver
Server\.CreateObject
#\.Provider
\.Open([[:space:]]*\(|[[:space:]]+[\"\']).*
#ADODB.recordset
New[[:space:]]+*OleDbConnection
ExecuteReader[[:space:]]*\(
#DataSource
SqlCo(mmand|nnection).*\=
#Microsoft.Jet
#SqlDataReader
#ExecuteReader
#GetString
#SqlDataAdapter
#CommandType
StoredProcedure[[:space:]]*\(
#System\.Data\.sql
[Cc]onnection[Ss]tr(ing)?[[:space:]]*\=[[:space:]]*[\'\"].*
# Stricter matching to avoid javascript spam
[\'\"][Ss][Ee][Ll][Ee][Cc][Tt][[:space:]]+.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(WHERE|where)[[:space:]]+[^\;]+=.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
[\'\" ]+AND[[:space:]]+.*=.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(LIKE|like)[[:space:]]+[^\(\)\;]+(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(LIMIT|limit)[[:space:]]+.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
ServerCertificateValidationCallback
checkCertificateName
checkCertificateRevocationList
# Dotnet XSS
[Rr]esponse.[Ww]rite[[:space:]]*\(
<%\s*=[[:space:]]*[\_a-zA-Z0-9][^\%]+
innerText[[:space:]]*=[^\;]+\+
innerHTML[[:space:]]*=[^\;]+\+
[Vv]alidate[Rr]equest=[\'\"]?false[\'\"]?
System\.Diagnostics\.Process\.Start\(.*
new[[:space:]]+(System\.Diagnostic\.)?Process(StartInfo)?[[:space:]]*\(.*
\.Start[[:space:]]\(.*
# via CliWrap
new[[:space:]]+Cli[[:space:]]*\(.*
# via Microsoft.VisualBasic
\.Shell[[:space:]]*\(.*
# Perl exec signatures
exec(\s*\(|\s+).*\$.*\)?
fork(\s*\(|\s+).*\)?
`.*\$.*`
system(\s*\(?|\s+)*\$.*\)?
open(\s*\(?|\s+)*\$.*\)?
# PHP - Execution
assert([[:space:]]*\(|[[:space:]]+).*\)?
exec([[:space:]]*\(|[[:space:]]+).*\)?
`.*`
passthru([[:space:]]*\(|[[:space:]]+).*\)?
popen([[:space:]]*\(|[[:space:]]+).*\)?
proc_close([[:space:]]*\(|[[:space:]]+).*\)?
proc_open([[:space:]]*\(|[[:space:]]+).*\)?
proc_get_status([[:space:]]*\(|[[:space:]]+).*\)?
proc_nice([[:space:]]*\(|[[:space:]]+).*\)?
proc_terminate([[:space:]]*\(|[[:space:]]+).*\)?
shell_exec([[:space:]]*\(|[[:space:]]+).*\)?
system([[:space:]]*\(|[[:space:]]+).*\)?
.*\=.*\!\!
[a-z0-9A-Z]\.\!
printf[[:space:]]*\([^\,\'\"]+\)\;
snprintf[[:space:]]*\([^\,]+\,[[:space:]]*sizeof\(.*\%s
scanf[[:space:]]*\([^\,]+\%s[^\\,]+\,[^\,]+\)\;
strncpy[[:space:]]*\([^\,]+\,[[:space:]]*sizeof\(
memcpy[[:space:]]*\([^\,]+\,[^\,]+\,[[:space:]]*sizeof\(
[[:space:]]gets[[:space:]]*\(
exec(ve|l|lp|le|v)[[:space:]]*\(
system[[:space:]]*\(.*\)\;
(strc(at|py)|memcpy|sprintf|sscanf)[[:space:]]*\(.*argv
<%=[[:space:]]*[Rr]equest\.[Qq]uery[Ss]tring\[.*%>
#[Ss][Ee][Ll][Ee][Cc][Tt][[:space:]]+.*\{[0-9]+\}
[Ss][Ee][Ll][Ee][Cc][Tt][[:space:]]+.*[\'\"][[:space:]]*\+[[:space:]]*[Rr]equest\..*
(WHERE|where)[[:space:]]+.*=.*[\'\"][[:space:]]*\+[[:space:]]*[Rr]equest\..*
[\'\" ]+AND[[:space:]]+.*=.*\+[[:space:]]*[Rr]equest\..*
(LIKE|like)[[:space:]]+[^\;]+\+[[:space:]]*[Rr]equest\..*
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*\+[[:space:]]*[Rr]equest
(LIMIT|limit)[[:space:]]+.*\+[[:space:]]*[Rr]equest\..*
\.WriteString\(.*URL\.Query\(\).*\)
\.Write\(.*URL.Query\(\).*\)
\.Println\(.*URL.Query\(\).*\)
\.Raw\(.*URL.Query\(\).*\)
\.Query\(.*URL.Query\(\).*\)
\.QueryContext\(.*URL.Query\(\).*\)
\.QueryRow\(.*URL.Query\(\).*\)
\.QueryRowContext\(.*URL.Query\(\).*\)
\.Exec\(.*URL.Query\(\).*\)
\.ExecContext\(.*URL.Query\(\).*\)
\.Open\(.*URL.Query\(\).*\)
response.sendRedirect[[:space:]]*\(.*(Request|request).*\)
out\.print(ln)?.*[Rr]equest\.
<%=[Rr]equest\.
\.exec[[:space:]]*\(.*\+.*
\.query\(.*[\'\"][[:space:]]*\+.*
eval[[:space:]]*\([^\)\;]+[\'\"][[:space:]]*\+[[:space:]]*[^\'\"]+
asm[[:space:]]+[\'\"].*
unsafeAddr
execShellCmd[[:space:]]*\(
# Perl-fruit signatures
exec[[:space:]]*\(?.*\$ARGV.*\)?
exec[[:space:]]*\(?.*\$.*->param[[:space:]]*\(.*\).*\)?
system[[:space:]]*\(?.*\$ARGV.*\)?
system[[:space:]]*\(?.*\$.*->param[[:space:]]*\(.*\).*\)?
`.*\$ARGV.*`
`.*\$.*->param[[:space:]]*\(.*\).*`
eval[[:space:]]*\(?.*\$ARGV.*\)?
eval[[:space:]]*\(?.*\$.*->param[[:space:]]*\(.*\).*\)?
use[[:space:]]+.*\$ARGV.*
use[[:space:]]+.*\$.*->param[[:space:]]*\(.*\).*
(WHERE|where)[[:space:]]+.*=.*\$.*->param[[:space:]]*\(.*\)
(LIKE|like)[[:space:]]+.*\$.*->param[[:space:]]*\(.*\)
(ORDER BY|order by)[[:space:]]+.*\$.*->param[[:space:]]*\(.*\)
(LIMIT|limit)[[:space:]]+.*\$.*->param[[:space:]]*\(.*\)
echo[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print_r([[:space:]]+|[[:space:]]*\().*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
\<\?\=\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
\<\%\=\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
exec[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
system[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
popen[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
proc_open[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
pcntl_exec[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
shell_exec[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
passthru[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
`[^`]*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)[^`]*`
eval[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
header[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
include[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
include_once[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
require[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
require_once[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
fopen[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
readfile[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
file_get_contents[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
show_source[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
preg_replace[[:space:]]*\([\'"](.).*\1[igsu]*e
highlight_file[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
file[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
unserialize[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
mysql_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
mysqli_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
mssql_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
oci_parse[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
pg_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
(WHERE|where)[[:space:]]+.*=.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)[^; ]+
(LIKE|like)[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
(LIMIT|limit)[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
\.Clean\(.*\)
\.Open\(.*\)
\.Read\(.*\)
\TempFile\(.*\)
\.WriteString\(.*URL\.Query\(\).*\)
\.Write\(.*URL.Query\(\).*\)
\.Println\(.*URL.Query\(\).*\)
\.Raw\(.*URL.Query\(\).*\)
\.Query\(.*URL.Query\(\).*\)
\.QueryContext\(.*URL.Query\(\).*\)
\.QueryRow\(.*URL.Query\(\).*\)
\.QueryRowContext\(.*URL.Query\(\).*\)
\.Exec\(.*URL.Query\(\).*\)
\.ExecContext\(.*URL.Query\(\).*\)
\.Open\(.*URL.Query\(\).*\)
http:RedirectHandler\(.*\)
\.ListenAndServe\(.*\)
\.ListenAndServeTLS\(.*\)
\.Handle\(.*\)
\.Handler\(.*\)
\.HandleFunc\(.*\)
\.Server\{.*\}
\.Serve\(.*\)
\.NewListener\(.*\)
\.NewRequest\(.*\)
\.NewWithClaims\(.*\)
\.SignedString\(.*\)
http\.SetCookie\(.*\)
\.Cookie\(.*\)
\.Header.Set\(.*\)
\.Header.Add\(.*\)
\.Raw\(.*\)
\.Query\(.*\)
\.QueryContext\(.*\)
\.QueryRow\(.*\)
\.QueryRowContext\(.*\)
\.Exec\(.*\)
\.ExecContext\(.*\)
InsecureSkipVerify.*[Ff][Aa][Ll][Ss][Ee]
\.ExecuteTemplate\(.*
URL\.Query\(\).*
QueryUnescape\(.*
allowsAny
CFStream
CLLocation
continueWithoutCredential
didFinishLaunchingWithOptions
didReceiveRemoteNotification
FMStatement
handleOpenURL
kCFStreamProperty
kCFStreamSocketSecurityLevel
kCFStreamSSL
kSec
NSPersistentStore
NSStream
NSURLConnection
NSURLErrorServerCertificate
NSUserDefaults
openURL
@property
registerForRemoteNotificationTypes
secItem
secKeychain
setAllowsAny
sqlite3
UIPasteBoard
uniqueIdentifier
setAllowsAnyHTTPSCertificate
validatesSecureCertificate
allowInvalidCertificates
kCFStreamSSLValidatesCertificateChain
CCCrypt
NSExceptionDomains
NSAllowsArbitraryLoads
NSExceptionAllowsInsecureHTTPLoads
kSSLProtocol3
kSSLProtocol2
kSSLProtocolAll
NSExceptionMinimumTLSVersion
kSecAttrAccessibleAlways
# Java Specific Security Related Exceptions
AccessControlException
BindException
ConcurrentModificationException
DigestException
FileNotFoundException
GeneralSecurityException
InsufficientResourcesException
InvalidAlgorithmParameterException
InvalidKeyException
InvalidParameterException
JarException
KeyException
KeyManagementException
KeyStoreException
NoSuchAlgorithmException
NoSuchProviderException
NotOwnerException
NullPointerException
OutOfMemoryError
PriviledgedActionException
ProviderException
SignatureException
SQLException
StackOverflowError
UnrecoverableEntryException
UnrecoverableKeyException
response.sendRedirect[[:space:]]*\(.*(Request|request).*\)
out\.print(ln)?.*[Rr]equest\.
<%=[Rr]equest\.
\.exec[[:space:]]*\(.*\+.*
AccessController
addHeader
CallableStatement
Cipher
controller
createRequest
doPrivileged
exec[[:space:]]*\(
executeQuery[[:space:]]*\(
executeUpdate
\.getHeader[[:space:]]*\(
\.getParameter[[:space:]]*\(
\.getProperty[[:space:]]*\(
\.getQueryString[[:space:]]*\(
\.getSession[[:space:]]\(
\.getRequestedSessionId[[:space:]]*\(
\.getServerName[[:space:]]*\(
HTTPCookie
HttpServletRequest
HttpServletResponse
HttpsURLConnection
invalidate
IS_SUPPORTING_EXTERNAL_ENTITIES
KeyManagerFactory
PreparedStatement
\.PathParam[[:space:]]*\(
random
java.util.Random
SecureRandom
SecurityException
SecurityManager
sendRedirect
setAllowFileAccess
setHeader
setJavaScriptEnabled
setPluginState
setStatus
SSLContext
SSLSocketFactory
Statement
SUPPORT_DTD
suppressAccessChecks
TrustManager
XMLReader
ObjectInputStream
readObject[[:space:]]*\(
resolveClass[[:space:]]*\(
\.createValueExpression[[:space:]]*\(
printStackTrace[[:space:]]\(
SecretKeySpec
request.getQueryString
exec[[:space:]]*\(.*\)
Runtime\.
getRuntime[[:space:]]*\(.*\)(\.|\s*;)
getRequest
[Rr]equest.getParameter
getProperty[[:space:]]*\(
java.security.acl.acl
response.sendRedirect[[:space:]]*\(.*(Request|request).*\)
print[Ss]tack[Tt]race
out\.print(ln)?.*[Rr]equest\.
# Database rules
jdbc:.*;
createStatement[[:space:]]*\(.*\)
executeQuery[[:space:]]*\(.*\)
# Network
Socket[[:space:]]*\(
A[Ll][Ll][Oo][Ww]_?A[Ll][Ll]_?H[Oo][Ss][Tt][Nn][Aa][Mm][Ee]_?V[Ee][Rr][Ii][Ff][Ii][Ee][Rr]
SSLSocketFactory
is[Tt]rusted
trustmanager
checkClientTrusted[[:space:]]*\(
checkServerTrusted[[:space:]]*\(
getAcceptedIssuers[[:space:]]*\(
public[[:space:]]+boolean[[:space:]]+verify
# Expression Language detection
<spr(ing)?:(message|theme|transform|eval|hasBindErrors|bind|nestedpath)[^\>]+\$\{param
# Java xss signatures
<%=.*[Rr]equest\.
response.sendRedirect[[:space:]]*\(.*[Rr]equest.*\)
<c:out.*\$\{param
SAXParserFactory
DOM4J
XMLInputFactory
TransformerFactory
javax.xml.validation.Validator
SchemaFactory
SAXTransformerFactory
XMLReader
SAXBuilder
SAXReader
javax.xml.bind.Unmarshaller
XPathExpression
DOMSource
StAXSource
(document|\$)\.cookie[[:space:]]*\(
\.query\(.*[\'\"][[:space:]]*\+.*
eval[[:space:]]*\([^\)\;]+[\'\"][[:space:]]*\+[[:space:]]*[^\'\"]+
eval[[:space:]]*\(
dangerouslySetInnerHTML
trustAsHtml
NODE_TLS_REJECT_UNAUTHORIZED
rejectUnauthorized
insecure
strictSSL
clientPemCrtSignedBySelfSignedRootCaBuffer
\.IncomingForm\(
\.parse\(
\.readFile\(
\.appendFile\(
\.writeFile\(
\.open\(
\.unlink\(
\.rename\(
\.createReadStream\(
\.createServer\(
\.createTransport\(
\.sendMail\(
#MongoDB rules
\.connect\(
\.createCollection\(
\.collection\(.*\)\.aggregate\(.*
\.collection\(.*\)\.find(One)?\(.*
\.collection\(.*\)\.insert(One|Many)?\(.*
\.collection\(.*\)\.delete(One|Many)?\(.*
\.collection\(.*\)\.update(One|Many)?\(.*
\.collection\(.*\)\.drop\(.*
#MySQL rules
\.createConnection\(.*
\.query\(.*\)
asm[[:space:]]+
unsafeAddr([[:space:]]+|[[:space:]]*\()
addr[[:space:]]*\(
open(File)?[[:space:]]*\(
asm[[:space:]]+[\'\"].*
unsafeAddr
execShellCmd[[:space:]]*\(
(put|del|get)Env[[:space:]]*\(
getConfigDir[[:space:]]*\(
getTempDir[[:space:]]*\(
quoteShell(Windows|Posix|Command)?[[:space:]]*\(
(fileExists|existsFile)[[:space:]]*\(
(dirExists|existsDir)[[:space:]]*\(
findExe[[:space:]]\(
getCurrentCompilerExe[[:space:]]*\(
copy(File|Dir)[[:space:]]*\(
(tryRe|re)?move(File|Dir)[[:space:]]*\(
(existsOr)?createDir[[:space:]]*\(
create(Sym|Hard)link[[:space:]]*\(
execShellCmd[[:space:]]*\(
parseCmdLine[[:space:]]*\(
param(Count|Str)[[:space:]]*\(
commandLineParams[[:space:]]*\(
getAppFilename[[:space:]]*\(
walk(Pattern|Files|Dir|Dirs|DirRec)
\{\..*injectStmt\:
\{\..*import(c(pp)?|objc)\:
\{\.unchecked
\{\.global
\{\..*boundC|overflowC|nilC|c)hecks\:[[:space:]]+off
\{\..*deadCodeElim\:[[:space:]]+on
\{\..*pass(C|L)\:[[:space:]]+
\{\..*codegenDecl\:
\{\..*injectStmt\:
# Perl exec signatures
exec(\s*\(|\s+).*\$.*\)?
fork(\s*\(|\s+).*\)?
`.*\$.*`
system(\s*\(?|\s+)*\$.*\)?
open(\s*\(?|\s+)*\$.*\)?
# Perl-fruit signatures
exec[[:space:]]*\(?.*\$ARGV.*\)?
exec[[:space:]]*\(?.*\$.*->param[[:space:]]*\(.*\).*\)?
system[[:space:]]*\(?.*\$ARGV.*\)?
system[[:space:]]*\(?.*\$.*->param[[:space:]]*\(.*\).*\)?
`.*\$ARGV.*`
`.*\$.*->param[[:space:]]*\(.*\).*`
eval[[:space:]]*\(?.*\$ARGV.*\)?
eval[[:space:]]*\(?.*\$.*->param[[:space:]]*\(.*\).*\)?
use[[:space:]]+.*\$ARGV.*
use[[:space:]]+.*\$.*->param[[:space:]]*\(.*\).*
(WHERE|where)[[:space:]]+.*=.*\$.*->param[[:space:]]*\(.*\)
(LIKE|like)[[:space:]]+.*\$.*->param[[:space:]]*\(.*\)
(ORDER BY|order by)[[:space:]]+.*\$.*->param[[:space:]]*\(.*\)
(LIMIT|limit)[[:space:]]+.*\$.*->param[[:space:]]*\(.*\)
# Perl superglobal signatures
\$ARGV\[.*?\]
\$ARGC
\$ENV
# Perl signatures
getc
readdir(\s+|\s*\().*\$.*
read(\s+|\s*\().*\$.*
sysread
eval.*\$.*
fctnl
ioctl
bind
setpgrp
syscall
connect.*\$.*
glob(\s+|\s*\().*\$.*
mkdir(\s+|\s*\().*\$.*
rmdir(\s+|\s*\().*\$.*
link(\s+|\s*\().*\$.*
unlink(\s+|\s*\().*\$.*
chmod(\s+|\s*\().*\$.*
chown(\s+|\s*\().*\$.*
chroot
symlink
truncate(\s+|\s*\().*\$.*
kill.*\$.*
umask
->param\s*\(.*\)
# Perl xss signatures
print\s*.*\$.*->param\(?.*\)?
ob_start[[:space:]]*\(
array_diff_uassoc[[:space:]]*\(
array_diff_ukey[[:space:]]*\(
array_filter[[:space:]]*\(
array_intersect_uassoc[[:space:]]*\(
array_intersect_ukey[[:space:]]*\(
array_map[[:space:]]*\(
array_reduce[[:space:]]*\(
array_udiff_assoc[[:space:]]*\(
array_udiff_uassoc[[:space:]]*\(
array_udiff[[:space:]]*\(
array_uintersect_assoc[[:space:]]*\(
array_uintersect_uassoc[[:space:]]*\(
array_uintersect[[:space:]]*\(
array_walk_recursive[[:space:]]*\(
array_walk[[:space:]]*\(
assert_options[[:space:]]*\(
uasort[[:space:]]*\(
uksort[[:space:]]*\(
usort[[:space:]]*\(
preg_replace_callback[[:space:]]*\(
preg_replace_callback_array[[:space:]]*\(
spl_autoload_register[[:space:]]*\(
iterator_apply[[:space:]]*\(
call_user_func[[:space:]]*\(
call_user_func_array[[:space:]]*\(
register_shutdown_function[[:space:]]*\(
register_tick_function[[:space:]]*\(
set_error_handler[[:space:]]*\(
set_exception_handler[[:space:]]*\(
session_set_save_handler[[:space:]]*\(
sqlite_create_aggregate[[:space:]]*\(
sqlite_create_function[[:space:]]*\(
Closure::bind(To)?[[:space:]]*\(
Closure::call[[:space:]]*\(
# Execution
exec[[:space:]]*\(.*\$.*\)
passthru[[:space:]]*\(.*\)
popen[[:space:]]*\(.*\$.*\)
shell_exec[[:space:]]*\(.*\$.*\)
system[[:space:]]*\(.*\$.*\)
`[^`]*\$[^`]*`
#Otherstuffs
#XSS signature needs to stop matching before LF when color=on #bug(1)
echo.*\$_.*\[.*\]
eval[[:space:]]*\(.*\$.*\)
#SQLi signature needs to stop matching before LF when color=on #bug(1)
mysql_query[[:space:]]*\(.*\$.*\)
WHERE\s+.*=.*\$[^; ]+
(include|include_once|require|require_once)[[:space:]]*\(.*\$.*\)
print.*param[[:space:]]*\(.*\);
# PHP - Execution
assert([[:space:]]*\(|[[:space:]]+).*\)?
exec([[:space:]]*\(|[[:space:]]+).*\)?
`.*`
passthru([[:space:]]*\(|[[:space:]]+).*\)?
popen([[:space:]]*\(|[[:space:]]+).*\)?
proc_close([[:space:]]*\(|[[:space:]]+).*\)?
proc_open([[:space:]]*\(|[[:space:]]+).*\)?
proc_get_status([[:space:]]*\(|[[:space:]]+).*\)?
proc_nice([[:space:]]*\(|[[:space:]]+).*\)?
proc_terminate([[:space:]]*\(|[[:space:]]+).*\)?
shell_exec([[:space:]]*\(|[[:space:]]+).*\)?
system([[:space:]]*\(|[[:space:]]+).*\)?
# Extensions
expect_
pcntl_
posix_
# Semaphore extension
ftok
msg_get_queue
msg_queue_exists
msg_receive
msg_remove_queue
msg_send
msg_set_queue
msg_stat_queue
sem_
shm_
shmop_
# LibXSLT use php functions as XSLT functions
registerPhpFunctions
FFI::cdef[[:space:]]*\(
\$ffi\-\>.*\(
FFI::addr[[:space:]]*\(
FFI::memcpy[[:space:]]*\(
FFI::load[[:space:]]*\(
FFI::free[[:space:]]*\(
FFI::new[[:space:]]*\(
FFI:;string[[:space:]]*\(
echo[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print_r([[:space:]]+|[[:space:]]*\().*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
\<\?\=\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
\<\%\=\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
exec[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
system[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
popen[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
proc_open[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
pcntl_exec[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
shell_exec[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
passthru[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
`[^`]*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)[^`]*`
eval[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
header[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
include[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
include_once[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
require[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
require_once[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
fopen[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
readfile[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
file_get_contents[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
show_source[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
preg_replace[[:space:]]*\([\'"](.).*\1[igsu]*e
highlight_file[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
file[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
unserialize[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
mysql_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
mysqli_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
mssql_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
oci_parse[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
pg_query[[:space:]]*\(.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*\)
(WHERE|where)[[:space:]]+.*=.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)[^; ]+
(LIKE|like)[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
(LIMIT|limit)[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
# Informatin disclosure
phpinfo\s*\(.*\)
phpcredits\s*\(.*\)
php_logo_guid\s*\(.*\)
php_uname\s*\(.*\)
phpversion\s*\(.*\)
zend_logo_guid\s*\(.*\)
zend_version\s*\(.*\)
get_loaded_extensions\s*\(.*\)
mqseries_connx?[[:space:]]*\(
mqseries_open[[:space:]]*\(
AMQPStreamConnection[[:space:]]*\(
\-\>basic_publish[[:space:]]*\(
\-\>queue_declare[[:space:]]*\(
#https://www.php-fig.org/psr/psr-7/
(::|\-\>)getAttribute[[:space:]]*\(.*
(::|\-\>)getAttributes[[:space:]]*\(.*
(::|\-\>)getAuthority[[:space:]]*\(.*
(::|\-\>)getBody[[:space:]]*\(.*
(::|\-\>)getClientFilename[[:space:]]*\(.*
(::|\-\>)getClientMediaType[[:space:]]*\(.*
(::|\-\>)getCookieParams[[:space:]]*\(.*
(::|\-\>)getHeaderLine[[:space:]]*\(.*
(::|\-\>)getHeader[[:space:]]*\(.*
(::|\-\>)getHeaders[[:space:]]*\(.*
(::|\-\>)getHost[[:space:]]*\(.*
(::|\-\>)getMethod[[:space:]]*\(.*
(::|\-\>)getParsedBody[[:space:]]*\(.*
(::|\-\>)getPath[[:space:]]*\(.*
(::|\-\>)getQueryParams[[:space:]]*\(.*
(::|\-\>)getQuery[[:space:]]*\(.*
(::|\-\>)getRequestTarget[[:space:]]*\(.*
(::|\-\>)getScheme[[:space:]]*\(.*
(::|\-\>)getServerParams[[:space:]]*\(.*
(::|\-\>)getUploadedFiles[[:space:]]*\(.*
(::|\-\>)getUri[[:space:]]*\(.*
(::|\-\>)getUserInfo[[:space:]]*\(.*
(::|\-\>)hasHeader[[:space:]]*\(.*
(::|\-\>)moveTo[[:space:]]*\(.*
(::|\-\>)withAddedHeader[[:space:]]*\(.*
(::|\-\>)withAttribute[[:space:]]*\(.*
(::|\-\>)withBody[[:space:]]*\(.*
(::|\-\>)withCookieParams[[:space:]]*\(.*
(::|\-\>)withHeader[[:space:]]*\(.*
(::|\-\>)withHost[[:space:]]*\(.*
(::|\-\>)withMethod[[:space:]]*\(.*
(::|\-\>)withParsedBody[[:space:]]*\(.*
(::|\-\>)withPath[[:space:]]*\(.*
(::|\-\>)withQueryParams[[:space:]]*\(.*
(::|\-\>)withQuery[[:space:]]*\(.*
(::|\-\>)withRequestTarget[[:space:]]*\(
(::|\-\>)withUploadedFiles[[:space:]]*\(.*
(::|\-\>)withUri[[:space:]]*\(.*
(::|\-\>)withUserInfo[[:space:]]*\(.*
\-\>setPassword[[:space:]]*\(
\-\>loadKey[[:space:]]*\(
\-\>login[[:space:]]*\([^\,]+\,[^\,]+\)
# PHP - Database
mysql_connect[[:space:]]*\(.*\$.*\)
mysql_pconnect[[:space:]]*\(.*\$.*\)
mysql_change_user[[:space:]]*\(.*\$.*\)
mysql_query[[:space:]]*\(.*\$.*\)
mysql_error[[:space:]]*\(.*\$.*\)
mysql_set_charset[[:space:]]*\(.*\$.*\)
mysql_unbuffered_query[[:space:]]*\(.*\$.*\)
mysqli_.*[[:space:]]*\(.*\$.*\)
pg_connect[[:space:]]*\(.*\$.*\)
pg_pconnect[[:space:]]*\(.*\$.*\)
pg_execute[[:space:]]*\(.*\$.*\)
pg_insert[[:space:]]*\(.*\$.*\)
pg_put_line[[:space:]]*\(.*\$.*\)
pg_query[[:space:]]*\(.*\$.*\)
pg_select[[:space:]]*\(.*\$.*\)
pg_send_query[[:space:]]*\(.*\$.*\)
pg_set_client_encoding[[:space:]]*\(.*\$.*\)
pg_update[[:space:]]*\(.*\$.*\)
sqlite_open[[:space:]]*\(.*\$.*\)
sqlite_poen[[:space:]]*\(.*\$.*\)
sqlite_query[[:space:]]*\(.*\$.*\)
sqlite_array_query[[:space:]]*\(.*\$.*\)
sqlite_create_function[[:space:]]*\(.*\$.*\)
sqlite_create_aggregate[[:space:]]*\(.*\$.*\)
sqlite_exec[[:space:]]*\(.*\$.*\)
sqlite_fetch_.*[[:space:]]*\(.*\$.*\)
msql_.*[[:space:]]*\(.*\$.*\)
mssql_.*[[:space:]]*\(.*\$.*\)
odbc_.*[[:space:]]*\(.*\$.*\)
fbsql_.*[[:space:]]*\(.*\$.*\)
sybase_.*[[:space:]]*\(.*\$.*\)
ibase_.*[[:space:]]*\(.*\$.*\)
dbx_.*[[:space:]]*\(.*\$.*\)
ingres_.*[[:space:]]*\(.*\$.*\)
ifx_.*[[:space:]]*\(.*\$.*\)
oci_.*[[:space:]]*\(.*\$.*\)
sqlsrv_.*[[:space:]]*\(.*\$.*\)
px_.*[[:space:]]*\(.*\$.*\)
ovrimos_.*[[:space:]]*\(.*\$.*\)
maxdb_.*[[:space:]]*\(.*\$.*\)
db2_.*[[:space:]]*\(.*\$.*\)
CURLOPT_SSL_VERIFY(HOST|PEER), *([Ff][Aa][Ll][Ss][Ee]|0)
unserialize[[:space:]]*\(.*\$.*
file_exists[[:space:]]*\(\"?\$.*
md5_file[[:space:]]*\(\"?\$.*
filemtime[[:space:]]*\(\"?\$.*
filesize[[:space:]]*\(\"?\$.*
file_get_contents[[:space:]]*\(.*\$.*
fopen[[:space:]]*\(.*\$.*
file[[:space:]]*\(.*\$.*
php://stdin
php://stdout
php://stderr
php://output
php://input
php://filter
php://memory
php://temp
phar://.*\$.*
expect:// 
# PHP - Superglobals & Environment
getenv\s*\(.*\)
apache_getenv\s*\(.*\)
putenv\s*\(.*\)
apache_setenv\s*\(.*\)
getallheaders\s*\(.*\)
apache_request_headers\s*\(.*\)
apache_response_headers\s*\(.*\)
\$_ENV\[.*\]
\$_GET\[.*\]
\$_POST\[.*\]
\$_COOKIE\[.*\]
\$_REQUEST\[.*\]
\$_FILES\[.*\]
\$_SERVER\[.*\]
\$PHPSELF
\$HTTP_GET_VARS
\$http_get_vars
\$HTTP_POST_VARS
\$http_post_vars
\$HTTP_ENV_VARS
\$http_env_vars
\$HTTP_RAW_POST_DATA
\$http_raw_post_data
\$HTTP_POST_FILES
\$http_post_files
# Variable variables aren't superglobals, but bad idea
\$\$.*
# Otherstuffs
header\s*\(.*\$_(GET|POST|REQUEST|COOKIE).*\)
eval\s*\(\s*.\$.*\s*\)
file\s*\(.\$.*\)
file_get_contents\s*\(.\$.*\)
fopen\s*\(.*\$.*\)
p?fsockopen\s*\(.*\)
stream_context_create\s*\(.*\)
fwrite
move_uploaded_file\s*\(.*\)
stream_
create_function\s*\(.*\)
mail\s*\(.\$.*\)
include\s*\(.*\$.*\)
include_once\s*\(.*\$.*\)
preg_replace\s*\(.\$*\)
readfile\s*\(.\$.*\)
require\s*\(.*\$.*\)
require_once\s*\(.*\$.*\)
# Stefan Esser's research
unserialize\s*\(.*\)
unserialize_callback_func
# PHP xss signatures
echo[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print_r([[:space:]]*\(|[[:space:]]+).*\)?\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
\<[\?\%]\=\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
\.NamedTemporaryFile\(.*\)
access[[:space:]]*\(
assert[[:space:]]*\(
mkfifo
pathconf
listdir
open[[:space:]]*\(
lstat
stat[[:space:]]*\(
chmod[[:space:]]*\(
chown[[:space:]]*\(
rename[[:space:]]*\(
mkdir[[:space:]]*\(
rmdir
remove[[:space:]]*\(
\.unlink[[:space:]]*\(
link[[:space:]]*\(
execv[[:space:]]*\(
execve[[:space:]]*\(
execl[[:space:]]*\(
execlp[[:space:]]*\(
execle[[:space:]]*\(
execvp[[:space:]]*\(
\.system[[:space:]]*\(.*\)
[Pp]open[[:space:]]*\(
openpty[[:space:]]*\(
[Pp][Ii][Pp][Ee][[:space:]]*\(
pipes
exec[[:space:]]*\(
spawn
shell
subprocess
execfile
eval[[:space:]]*\(
input[[:space:]]*\(
compile
tmpfile
tmpnam
getlogin
ttyname
raw_input
read[[:space:]]*\(
recvfrom
recv
signal
fork[[:space:]]*\(
[Bb]astion
[Rr][Ee]xec
r_eval
r_execfile
r_exec
[[:space:]]+commands
[[:space:]]+input
pickle
c[Pp]ickle
shell[[:space:]]*=[[:space:]]*[Ff]alse
Cookie
SmartCookie
SerialParser
multiprocessing
shelve
# Should these be replaced with extract(all) rules?
tarfile
zipfile
[[:space:]]+ast
[[:space:]]+parser
[[:space:]]+compiler
yaml
urllib3.disable_warnings
\.startswith\(
\.urlopen\(
# Ruby - Execution
_send_[[:space:]]*\(
__send__[[:space:]]*\(
`.*`
system[[:space:]]*\(
open[[:space:]]*\(
send[[:space:]]*\(
public_send[[:space:]]*\(
eval[[:space:]]*\(
exec[[:space:]]*\(
syscall[[:space:]]*\(
# Ruby - File operations
File\.new[[:space:]]*\(
fork[[:space:]]*\(
write[[:space:]]*\(
execve[[:space:]]*\(
# Ruby - Unsafe Reflection
params\[:[a-zA-Z0-9_]+\]\.constantize
new[[:space:]]*\(params\[:[a-zA-Z0-9_]+\]
# Base64/High entropy stings
([A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/])([A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/])([A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/])+([A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/][A-Za-z0-9\+\/\=][A-Za-z0-9\+\/\=])
[Aa][Ww][Ss][_\-\.]?[Ss][Ee][Cc][Rr][Ee][Tt][_\-\.]?[Kk][Ee][Yy]
[Aa][Ww][Ss][_\-\.]?[Kk][Ee][Yy]
[_\-\.]?[Aa][Pp][Ii][_\-\.]?[Kk][Ee][Yy]
[_\-\.][Oo][Aa][Uu][Tt][Hh][[:space:]]*=
(client_secret|CLIENT_SECRET)
[Ss][Ee][Cc][Rr][Ee][Tt][_\-\.]?([Kk][Ee][Yy])?[[:space:]]*=
[_\-\.][Pp][Aa][Ss][Ss][Ww][Oo]?[Rr]?[Dd][[:space:]]*=[[:space:]]*[\'\"\][^\'\"].....*
-----BEGIN( RSA| OPENSSH| DSA| EC| PGP| ENCRYPTED)? PRIVATE KEY( BLOCK)?-----
PuTTY-User-Key-File-2\:
(WHERE|where)[[:space:]]+.*=.*\@.*
(LIKE|like)[[:space:]]+.*\@.*
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*\@.*
(LIMIT|limit)[[:space:]]+.*\@.*
# DotNet SQL
exec[[:space:]]*sp_executesql
execute[[:space:]]*sp_executesql
exec[[:space:]]*sp_.*
execute[[:space:]]*sp_.*
exec[[:space:]]*xp_.*
execute[[:space:]]*sp_.*
exec[[:space:]]*@
execute[[:space:]]*@
executestatement[[:space:]]*\(
executeSQL[[:space:]]*\(
#setfilter
executeQuery[[:space:]]*\(
GetQueryResultInXML[[:space:]]*\(
#adodb
#sqloledb
#sql[[:space:]]*server
#driver
Server\.CreateObject
#\.Provider
\.Open([[:space:]]*\(|[[:space:]]+[\"\']).*
#ADODB.recordset
New[[:space:]]+*OleDbConnection
ExecuteReader[[:space:]]*\(
#DataSource
SqlCo(mmand|nnection).*\=
#Microsoft.Jet
#SqlDataReader
#ExecuteReader
#GetString
#SqlDataAdapter
#CommandType
StoredProcedure[[:space:]]*\(
#System\.Data\.sql
[Cc]onnection[Ss]tr(ing)?[[:space:]]*\=[[:space:]]*[\'\"].*
# Stricter matching to avoid javascript spam
[\'\"][Ss][Ee][Ll][Ee][Cc][Tt][[:space:]]+.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(WHERE|where)[[:space:]]+[^\;]+=.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
[\'\" ]+AND[[:space:]]+.*=.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(LIKE|like)[[:space:]]+[^\(\)\;]+(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(ORDER[[:space:]]+BY|order[[:space:]]+by)[[:space:]]+.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
(LIMIT|limit)[[:space:]]+.*(\{[0-9]+\}|[\'\"][[:space:]]+\+)
\.Raw\(.*\)
\.Query\(.*\)
\.QueryContext\(.*\)
\.QueryRow\(.*\)
\.QueryRowContext\(.*\)
\.Exec\(.*\)
\.ExecContext\(.*\)
#MongoDB rules
\.connect\(
\.createCollection\(
\.collection\(.*\)\.aggregate\(.*
\.collection\(.*\)\.find(One)?\(.*
\.collection\(.*\)\.insert(One|Many)?\(.*
\.collection\(.*\)\.delete(One|Many)?\(.*
\.collection\(.*\)\.update(One|Many)?\(.*
\.collection\(.*\)\.drop\(.*
#MySQL rules
\.createConnection\(.*
\.query\(.*\)
# PHP - Database
mysql_connect[[:space:]]*\(.*\$.*\)
mysql_pconnect[[:space:]]*\(.*\$.*\)
mysql_change_user[[:space:]]*\(.*\$.*\)
mysql_query[[:space:]]*\(.*\$.*\)
mysql_error[[:space:]]*\(.*\$.*\)
mysql_set_charset[[:space:]]*\(.*\$.*\)
mysql_unbuffered_query[[:space:]]*\(.*\$.*\)
mysqli_.*[[:space:]]*\(.*\$.*\)
pg_connect[[:space:]]*\(.*\$.*\)
pg_pconnect[[:space:]]*\(.*\$.*\)
pg_execute[[:space:]]*\(.*\$.*\)
pg_insert[[:space:]]*\(.*\$.*\)
pg_put_line[[:space:]]*\(.*\$.*\)
pg_query[[:space:]]*\(.*\$.*\)
pg_select[[:space:]]*\(.*\$.*\)
pg_send_query[[:space:]]*\(.*\$.*\)
pg_set_client_encoding[[:space:]]*\(.*\$.*\)
pg_update[[:space:]]*\(.*\$.*\)
sqlite_open[[:space:]]*\(.*\$.*\)
sqlite_poen[[:space:]]*\(.*\$.*\)
sqlite_query[[:space:]]*\(.*\$.*\)
sqlite_array_query[[:space:]]*\(.*\$.*\)
sqlite_create_function[[:space:]]*\(.*\$.*\)
sqlite_create_aggregate[[:space:]]*\(.*\$.*\)
sqlite_exec[[:space:]]*\(.*\$.*\)
sqlite_fetch_.*[[:space:]]*\(.*\$.*\)
msql_.*[[:space:]]*\(.*\$.*\)
mssql_.*[[:space:]]*\(.*\$.*\)
odbc_.*[[:space:]]*\(.*\$.*\)
fbsql_.*[[:space:]]*\(.*\$.*\)
sybase_.*[[:space:]]*\(.*\$.*\)
ibase_.*[[:space:]]*\(.*\$.*\)
dbx_.*[[:space:]]*\(.*\$.*\)
ingres_.*[[:space:]]*\(.*\$.*\)
ifx_.*[[:space:]]*\(.*\$.*\)
oci_.*[[:space:]]*\(.*\$.*\)
sqlsrv_.*[[:space:]]*\(.*\$.*\)
px_.*[[:space:]]*\(.*\$.*\)
ovrimos_.*[[:space:]]*\(.*\$.*\)
maxdb_.*[[:space:]]*\(.*\$.*\)
db2_.*[[:space:]]*\(.*\$.*\)
[Bb][Aa][Cc][Kk][Dd][Oo][Oo][Rr]
[Bb][Uu][Gg]
[Dd][Ee][Cc][Oo][Yy]
[Hh][Aa][Cc][Kk]
[Ff][Ii][Xx][Mm][Ee]
[Tt][Oo][Dd][Oo]
XXX
.*select\s+.*\s+from .*
.*update\s+.*\s+where
.*insert\s+.*\s+into
.*delete\s*.*\s+from
.*exec.*
.*executeQuery.*
.*sp_executesql.*
.*sqlcommand.*
.*executeScalar.*
.*executeSql.*
.*executeQuery.*
.*executeStatement.*
.*mysql_query.*
.*executeQuery.*
.*createStatement.*
.*exec\s+(@Query).*
.*exec\s+@Query.*
.*concat.*
.*concatenate.*
.*GetQueryResultInXML.*
.*setfilter.*
.*sqloledb.*
.*sql\s+server.*
.*driver.*
.*sqlconnection.*
.*dsn.*
.*adodb.*
.*jdbc.*
.*java.sql.*
.*sqlclient.*
.*oracleclient.*
.*mysql_connect.*
.*driver.*
.*pass.*
.*pwd.*
.*usr.*
.*user.*
.*public.*class.*
.*session.*
.*(chmod|chown).*
.*base64.*
.*urlencode.*
.*htmlencode.*
.*UTF8Encoding.UTF8.GetBytes.*
.*UTF8Encoding.UTF8.GetString.*
.*ToBase64String.*
.*FromBase64String.*
.*Math.random.*
.*rnd.*
.*(rand|srand).*
.*Wscript.shell.*
.*system.*
.*execfile.*
.*Input.*Type.*Hidden.*
.*(E|e)xception.*
http:
ftp:
# Dotnet XSS
[Rr]esponse.[Ww]rite[[:space:]]*\(
<%\s*=[[:space:]]*[\_a-zA-Z0-9][^\%]+
innerText[[:space:]]*=[^\;]+\+
innerHTML[[:space:]]*=[^\;]+\+
[Vv]alidate[Rr]equest=[\'\"]?false[\'\"]?
URL\.Query\(\).*
QueryUnescape\(.*
# Java xss signatures
<%=.*[Rr]equest\.
response.sendRedirect[[:space:]]*\(.*[Rr]equest.*\)
<c:out.*\$\{param
# Perl xss signatures
print\s*.*\$.*->param\(?.*\)?
# PHP xss signatures
echo[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print[[:space:]]+.*\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
print_r([[:space:]]*\(|[[:space:]]+).*\)?\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http).*
\<[\?\%]\=\$(_ENV|_GET|_POST|_COOKIE|_REQUEST|_SERVER|HTTP|http)
